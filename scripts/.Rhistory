fc <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_corr/subj_1020.rds")
fc <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_corr/subj_1020.rds")
fuc <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_uncorr/subj_1020.rds")
fc
library(brms)
fc
fixef(fc)
options(digits=3)
fixef(fc)
options(digits=2)
fixef(fc)
cbind(fixef(fc),fixef(fuc))
cbind(fixef(fc)[-1,],fixef(fuc))
cbind(fixef(fc)[-1,],fixef(fuc)) %>% View()
library(magrittr)
cbind(fixef(fc)[-1,],fixef(fuc)) %>% View()
cbind(fixef(fuc), fixef(fc)[-1,]) %>% View()
cbind(fixef(fuc), fixef(fc)[-1,]) %>% View()
cbind(fixef(fuc), NA, fixef(fc)[-1,]) %>% View()
options(digits=1)
cbind(fixef(fuc), NA, fixef(fc)[-1,]) %>% View()
contr.helmert(3)
contr.sum(3)
fc <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_corr/subj_1016.rds")
fuc <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_uncorr/subj_1016.rds")
options(digits=2)
cbind(fixef(fuc), NA, fixef(fc)[-1,]) %>% View()
cAmbVsLow <- c("none" = 0,  "high" = 0, "low" = -0.5, "amb" = 0.5)
cAmbVsHigh <- c("none" = 0, "high" = -0.5, "low" = 0, "amb" = 0.5)
cGenderMasc <- c("fem" = -0.5, "masc" = .5)
fit <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_corr/subj_1010.rds")
fit
cAmbVsLow + cAmbVsHigh
3.71 + 1.12*cAmbVsLow + 0.51*cAmbVsHigh
options(digits=2)
3.71 + 1.12*cAmbVsLow + 0.51*cAmbVsHigh
options(digits=3)
3.71 + 1.12*cAmbVsLow + 0.51*cAmbVsHigh
cAmbVsLow <- c("high" = 0, "low" = -0.5, "amb" = 0.5)
cAmbVsHigh <- c("high" = -0.5, "low" = 0, "amb" = 0.5)
3.71 + 1.12*cAmbVsLow + 0.51*cAmbVsHigh
(3.71 + 1.12*cAmbVsLow + 0.51*cAmbVsHigh) %>% mean()
(3.71 + 1.12*cAmbVsLow + 0.51*cAmbVsHigh)
4.52-3.15
4.52-3.46
4.52-0.51
3.46+0.51
3.71-0.51
3.71+0.51
subj_2c <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/models/models_singlesubj_corr/subj_2.rds")
library(brms)
subj_2c
library(bookdown)
typeof(1)
typeof(as.integer(1))
typeof(1L)
is.numeric(1L)
is.double(1L)
# store size labels in a vector
label <- c('venti', 'grande', 'tall')
# make it an ordered vector
label <- ordered(label, c('venti', 'grande', 'tall'))
# store sizes in ounces in a vector
sizes_oz <- c(20, 16, 12)
# store cafe latte prices in a vector; prices probably not up to date
price_tl <- c(11.00, 9.75, 8.50)
# store sizes in ounces in a vector
size_oz <- c(20, 16, 12)
df_starbucks_coffee <- data.frame(label, size_oz, price_tl)
df_starbucks_coffee
library(ggplot2)
# plot
ggplot(df_starbucks_coffee, aes(label, size_oz)) + geom_bar()
# plot
ggplot(df_starbucks_coffee, aes(label, size_oz)) + geom_bar(stat = "identity")
# store size labels in a vector
label <- c('tall', 'grande', 'venti')
# make it an ordered vector
label <- ordered(label, c('tall', 'grande', 'venti'))
# store sizes in ounces in a vector
size_oz <- c(12, 16, 20)
# store sizes in ounces in a vector
size_oz <- c(12, 16, 20)
# store cafe latte prices in a vector; prices probably not up to date
price_tl <- c(8.50, 9.75, 11.00)
df_starbucks_coffee <- data.frame(label, size_oz, price_tl)
df_starbucks_coffee
# plot
ggplot(df_starbucks_coffee, aes(label, size_oz)) + geom_bar(stat = "identity")
# plot cup size by catogory, use a bar plot
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_bar(stat = "identity")
# plot cup size by catogory, use a bar plot
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(0, 100))
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(0, 400))
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(0, 40))
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(0, 20))
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(5, 20))
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(5, 15))
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point() + scale_x_continuous(limits = c(5, 15)) + geom_smooth(method = "lm")
# plot cup size by price, use a bar plot; extrapolate
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()  + geom_smooth(method = "lm") + scale_x_continuous(limits = c(5, 15))
# plot cup size by price, use a scatterplot
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()  + geom_smooth(method = "lm")
# plot cup size by price, use a scatterplot;  draw a line through the points
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()  + geom_smooth(method = "lm") + scale_x_continuous(limits = c(5, 15))
# plot cup size by price, use a scatterplot;  draw a line through the points
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()  + geom_smooth(method = "lm") + scale_x_continuous(limits = c(5, 15))  + scale_y_continuous(limits = c(10, 25))
# plot cup size by price, use a scatterplot;  draw a line through the points
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()  + geom_smooth(method = "lm", fullrange=TRUE) + scale_x_continuous(limits = c(5, 15))  + scale_y_continuous(limits = c(10, 25))
# plot cup size by price, use a scatterplot;  draw a line through the points
ggplot(df_starbucks_coffee, aes(price_tl, size_oz)) + geom_point()  + geom_smooth(method = "lm", fullrange=TRUE) + scale_x_continuous(limits = c(5, 15))  + scale_y_continuous(limits = c(0, 25))
1 == "1.0"
1.0 == "1.0"
T
1 == '1'
1 == '1'
T == 1
T == '1'
my_yearly_income <- 12000
rep(1, 2)
rep(1, 20)
rep(1:2, 20)
rep(1:2, each=20)
# create two vectors with week days
horse_bets_week_days <- rep(c("Wed", "Fr"), 8)
poker_week_days <- rep(c("Wed", "Fr"), 6)
horse_bets_week_days
View(df_poker)
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed,
prompt = F)
# create and print vectors, don't save
c(1,2, 1000)
c(1,2, 1000, pi)
1:3
# create and print a data.frame
data.frame(1:3)
vector_var <- c(1,2,3,4,5,6,7,8)
vector_var
vector_var <- 1:8
vector_var
vector_var <- seq(1,8, by=2)
vector_var
letters
LETTERS
letters
LETTERS
# the first letter
letters[1]
# the 13-th letter
letters[13]
# both of them
letters[c(1,13)]
# both of them
letters[6:12]
# both of them
letters[-1]
digits <- c('one'=1, 'two'=2, 'three'=3, 'four'=4, 'five'=5, 'six'=6)
digits[c('one', 'six')]
9
letters # print a vector with all lower-case letters
horse_bets_payout_tl <- c(100, -50, 1, 100, -10, -20, 250, -40, -30, 23, -23, 55, 14, 8, 24, -3)
poker_payout_tl <- c(24, 5, -38.1, 12, 103, 15, 5, 187, 13, -23, -45, 36)
sum(horse_bets_payout_tl)
sum(poker_payout_tl)
length(horse_bets_payout_tl)
mean(horse_bets_payout_tl)
sum(horse_bets_payout_tl)/length(horse_bets_payout_tl)
mean(horse_bets_payout_tl)
mean(poker_payout_tl)
horse_bets_profits_tl <- horse_bets_payout_tl - 1.5
poker_profits_tl <- poker_payout_tl
horse_bets_payout_tl
horse_bets_profits_tl
poker_payout_tl
poker_profits_tl
mean(horse_bets_profits_tl)
mean(poker_profits_tl)
# create two vectors with week days
horse_bets_week_days <- rep(c("Wed", "Fr"), 8)
poker_week_days <- rep(c("Wed", "Fr"), 6)
df_horse_bets <-
data.frame(wday = horse_bets_week_days,
profit = horse_bets_profits_tl)
df_poker <-
data.frame(wday = poker_week_days,
profit = poker_payout_tl)
df_horse_bets
head(df_horse_bets, 2)
View(df_poker)
df_poker$game <- "poker"
df_horse_bets$game <- "horse_bets"
df_gambling <- rbind(df_horse_bets, df_poker)
View(df_gambling)
%>%
library(magrittr)
mean(c(1,2,3))
c(1,2,3) %>% mean()
df_gambling %>%
group_by(game)
library(dplyr)
df_gambling %>%
group_by(game)
df <- data.frame(xab=1:3, abd=1:3 )
df
df$xab
df$xa
my_yearly_income <- 12000
months <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
my_average_monthly_income <- my_yearly_income/12
length(months)
my_average_monthly_income <- my_yearly_income/length(months)
my_average_monthly_income
library(MCMCglmm)
install.packages(MCMCglmm)
install.packages("MCMCglmm")
library(MCMCglmm)
x <- data.frame(x = 1:10)
MCMCglmm::MCMCglmm(x ~ 1, data =x)
m <- MCMCglmm::MCMCglmm(x ~ 1, data =x)
m
summary(m)
library(rstanarm )
library(rstanarm)
df <- data.frame(n_yes=167:168, n=6500)
m <- stan_glm(n_yes|trials(n) ~ 1, data = df, family = "binomial", file = "")
m <- stan_glm(n_yes/trials(n) ~ 1, data = df, family = "binomial", file = "")
m <- stan_glm(n_yes/n ~ 1, data = df, family = "binomial", file = "")
m <- stan_glm(n_yes/n ~ 1, data = df, family = "binomial")
summary(m)
df <- data.frame(n_yes=1, n=6500)
m <- stan_glm(n_yes/n ~ 1, data = df, family = "binomial")
library(mrsat)
cite("mrsat")
?mrsat
fnew <- readRDS("~/Academia/MyCurrentDrafts/german_rcs_sat_uspec/workspace/model_fits/fit_all_uncorr_bysubj_1.rds")
fnew
fnew$model
f0 <- readRDS("~/Academia/MyCurrentDrafts/sat_uspec/sat_underspecification/workspace/model_fits0/m_uncorr_bysubj1.rds")
f0$model
setwd("~/Academia/MyCurrentDrafts/tr_attachment_preference_reciprocal/scripts")
(load("../workspace/data/question_responses_tr_en.rda"))
head(question_responses_n_en)
question_responses_n_en %>% se_cousineau(n_conditions=6, subject=subject, DV="perc_yes", group=c("attachment", "question_np"), is_proportion = T)
setwd("~/Academia/MyCurrentDrafts/tr_attachment_preference_reciprocal/scripts")
library(plyr)
library(dplyr)
library(magrittr)
library(brms)
library(ggplot2)
library(scales)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
gg_color_hue(4)
se_cousineau <- function(df, n_conditions, subject, DV, group, is_proportion = NULL)
{
stopifnot(!"avgDV" %in% colnames(df))
subject_var <- substitute(subject) %>% deparse() %>% gsub("\"", "", .)
DV <- substitute(DV) %>% deparse() %>% gsub("\"", "", .)
stopifnot( subject_var %in% colnames(df) && DV %in% colnames(df) )
subj_means <- df %>% group_by(.dots = subject_var) %>%
dplyr::summarize(avgDV := mean(!!as.name(DV), na.rm = T),
.groups = "drop")
GM <- mean(subj_means$avgDV)
df %<>% group_by(.dots = subject_var) %>%
dplyr::mutate(nDV = !!as.name(DV) - mean(!!as.name(DV), na.rm = T) + GM) %>%
ungroup()
if (is.null(is_proportion)) {
dv <- df[[DV]]
dv_unique <- unique(dv)
if ( is.logical(dv) || (length(dv_unique) == 2 && all(dv_unique %in% c(0,1))) ) {
is_proportion <- TRUE
} else {
is_proportion <- FALSE
}
}
(load("../workspace/data/question_responses_tr_en.rda"))
se_cousineau <- function(df, n_conditions, subject, DV, group, is_proportion = NULL)
{
stopifnot(!"avgDV" %in% colnames(df))
subject_var <- substitute(subject) %>% deparse() %>% gsub("\"", "", .)
DV <- substitute(DV) %>% deparse() %>% gsub("\"", "", .)
stopifnot( subject_var %in% colnames(df) && DV %in% colnames(df) )
subj_means <- df %>% group_by(.dots = subject_var) %>%
dplyr::summarize(avgDV := mean(!!as.name(DV), na.rm = T),
.groups = "drop")
GM <- mean(subj_means$avgDV)
df %<>% group_by(.dots = subject_var) %>%
dplyr::mutate(nDV = !!as.name(DV) - mean(!!as.name(DV), na.rm = T) + GM) %>%
ungroup()
if (is.null(is_proportion)) {
dv <- df[[DV]]
dv_unique <- unique(dv)
if ( is.logical(dv) || (length(dv_unique) == 2 && all(dv_unique %in% c(0,1))) ) {
is_proportion <- TRUE
} else {
is_proportion <- FALSE
}
}
var_correction_factor <- n_conditions/(n_conditions-1)
df %>% group_by(.dots = group) %>%
dplyr::summarize(M = mean(nDV, na.rm = T),
Var = ifelse(is_proportion, M*(1-M), var(nDV, na.rm = T)) * var_correction_factor,
N = sum(!is.na(nDV)),
SE = sqrt(Var/N),
.groups = "drop" )
}
)
se_cousineau <- function(df, n_conditions, subject, DV, group, is_proportion = NULL)
{
stopifnot(!"avgDV" %in% colnames(df))
subject_var <- substitute(subject) %>% deparse() %>% gsub("\"", "", .)
DV <- substitute(DV) %>% deparse() %>% gsub("\"", "", .)
stopifnot( subject_var %in% colnames(df) && DV %in% colnames(df) )
subj_means <- df %>% group_by(.dots = subject_var) %>%
dplyr::summarize(avgDV := mean(!!as.name(DV), na.rm = T),
.groups = "drop")
GM <- mean(subj_means$avgDV)
df %<>% group_by(.dots = subject_var) %>%
dplyr::mutate(nDV = !!as.name(DV) - mean(!!as.name(DV), na.rm = T) + GM) %>%
ungroup()
if (is.null(is_proportion)) {
dv <- df[[DV]]
dv_unique <- unique(dv)
if ( is.logical(dv) || (length(dv_unique) == 2 && all(dv_unique %in% c(0,1))) ) {
is_proportion <- TRUE
} else {
is_proportion <- FALSE
}
}
var_correction_factor <- n_conditions/(n_conditions-1)
df %>% group_by(.dots = group) %>%
dplyr::summarize(M = mean(nDV, na.rm = T),
Var = ifelse(is_proportion, M*(1-M), var(nDV, na.rm = T)) * var_correction_factor,
N = sum(!is.na(nDV)),
SE = sqrt(Var/N),
.groups = "drop" )
}
question_responses_n_en %>% se_cousineau(n_conditions=6, subject=subject, DV="perc_yes", group=c("attachment", "question_np"), is_proportion = T)
(load("../workspace/data/question_responses_tr_en.rda"))
question_responses_n_en %>% se_cousineau(n_conditions=6, subject=subject, DV="perc_yes", group=c("attachment", "question_np"), is_proportion = T)
question_responses_n_summary_en
perc_cis_en <-
question_responses_n_en %>% se_cousineau(n_conditions=6, subject=subject, DV="perc_yes", group=c("attachment", "question_np"), is_proportion = T)
perc_cis_en
perc_cis_tr <-
question_responses_n_tr %>% se_cousineau(n_conditions=6, subject=subject, DV="perc_yes", group=c("attachment", "question_np"), is_proportion = T)
perc_cis_tr
perc_cis_en$experiment <- "English (Swets et al., 2008)"
perc_cis_tr$experiment <- "Turkish"
perc_cis <- bind_rows(perc_cis_en, perc_cis_tr)
#p_raw <-
perc_cis %>% ggplot(aes(question_np, obs, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=obs), shape = "square", size = 2, alpha = .5) + geom_line(alpha = .5)
#p_raw <-
perc_cis %>% ggplot(aes(question_np, obs, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2, alpha = .5) + geom_line(alpha = .5)
#p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2, alpha = .5) + geom_line(alpha = .5)
perc_cis$attachment %>% dplyr::recode("N1"="N1 attachment")
perc_cis$attachment %>% dplyr::recode("N1 attachment"="N1")
perc_cis$attachment %>% dplyr::recode("N1"="N1 attachment")
perc_cis$attachment %<>% dplyr::recode("N1"="N1 attachment", "N2"="N2 attachment")
#p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2, alpha = .5) + geom_line(alpha = .5)
#p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2, alpha = .5) + geom_line(alpha = .5) +
#geom_errorbar(aes(ymin=lower95, ymax=upper95), width = 0.05) +
facet_wrap(~experiment) + scale_y_continuous(labels = scales::percent_format(), limits = c(0,1)) +
theme_bw() +
theme(legend.position="top") + scale_color_discrete(name = NULL) +
xlab(NULL) + ylab("Percentage of 'yes' responses")
#p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2) + geom_line() +
#geom_errorbar(aes(ymin=lower95, ymax=upper95), width = 0.05) +
facet_wrap(~experiment) + scale_y_continuous(labels = scales::percent_format(), limits = c(0,1)) +
theme_bw() +
theme(legend.position="top") + scale_color_discrete(name = NULL) +
xlab(NULL) + ylab("Percentage of 'yes' responses")
perc_cis
#p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2) + geom_line() +
geom_errorbar(aes(ymin=M-1.96*SE, ymax=M+1.96*SE), width = 0.05) +
facet_wrap(~experiment) + scale_y_continuous(labels = scales::percent_format(), limits = c(0,1)) +
theme_bw() +
theme(legend.position="top") + scale_color_discrete(name = NULL) +
xlab(NULL) + ylab("Percentage of 'yes' responses")
#p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2) + geom_line() +
geom_errorbar(aes(ymin=M-1.96*SE, ymax=M+1.96*SE), width = 0.1) +
facet_wrap(~experiment) + scale_y_continuous(labels = scales::percent_format(), limits = c(0,1)) +
theme_bw() +
theme(legend.position="top") + scale_color_discrete(name = NULL) +
xlab(NULL) + ylab("Percentage of 'yes' responses")
p_raw <-
perc_cis %>% ggplot(aes(question_np, M, color = attachment, group = attachment)) +
#geom_point() +
geom_point(aes(y=M), shape = "square", size = 2) + geom_line() +
geom_errorbar(aes(ymin=M-1.96*SE, ymax=M+1.96*SE), width = 0.1) +
facet_wrap(~experiment) + scale_y_continuous(labels = scales::percent_format(), limits = c(0,1)) +
theme_bw() +
theme(legend.position="top") + scale_color_discrete(name = NULL) +
xlab(NULL) + ylab("Percentage of 'yes' responses")
p_raw
z = 1.5
ggsave(p_raw, file = "../figures/avg_perc.pdf", width = 3*z, height = 2*z)
